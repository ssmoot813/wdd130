/* CSS - Name: "positionstyles.css" */

/* ---------- Activity 1 ---------- */
/* Two equal columns, gap, center small boxes; red/blue span both columns */
.content1 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  gap: 20px;
  width: 90%;
  margin: 0 auto;
}
.red1 {
  width: 100%;
  height: 100px;
  background-color: red;
  grid-column: 1 / 3;
}
.green1 {
  width: 200px;
  height: 200px;
  background-color: green;
}
.yellow1 {
  width: 200px;
  height: 200px;
  background-color: gold;
}
.blue1 {
  width: 100%;
  height: 100px;
  background-color: blue;
  grid-column: 1 / 3;
}

/* ---------- Activity 2 ---------- */
/* Staggered / overlapping squares. Use a grid with 50px columns (hint provided). */
.content2 {
  display: grid;
  grid-template-columns: 50px 50px 50px 50px 50px;
  width: 250px;
  height: 250px;
  margin: 0 auto;
  position: relative;
}
.red2 {
  grid-column: 1 / 3;
  grid-row: 1 / 3;
  background-color: red;
  width: 100px;
  height: 100px;
  z-index: 1;
}
.green2 {
  grid-column: 2 / 4;
  grid-row: 2 / 4;
  background-color: green;
  width: 100px;
  height: 100px;
  z-index: 2;
}
.yellow2 {
  grid-column: 3 / 5;
  grid-row: 3 / 5;
  background-color: gold;
  width: 100px;
  height: 100px;
  z-index: 3;
}
.blue2 {
  grid-column: 4 / 6;
  grid-row: 4 / 6;
  background-color: blue;
  width: 100px;
  height: 100px;
  z-index: 4;
}

/* ---------- Activity 3 ---------- */
/* Two-column layout using grid â€” boxes arranged 2 columns x 2 rows */
.content3 {
  display: grid;
  grid-template-columns: 150px 150px;
  grid-template-rows: 150px 150px;
  gap: 20px;
  justify-content: center;
  width: 100%;
  margin: 0 auto;
}
.red3 {
  background-color: red;
  width: 150px;
  height: 150px;
  grid-column: 1;
  grid-row: 1;
}
.green3 {
  background-color: green;
  width: 150px;
  height: 150px;
  grid-column: 2;
  grid-row: 1;
}
.yellow3 {
  background-color: gold;
  width: 150px;
  height: 150px;
  grid-column: 1;
  grid-row: 2;
}
.blue3 {
  background-color: blue;
  width: 150px;
  height: 150px;
  grid-column: 2;
  grid-row: 2;
}

/* ---------- Activity 4 ---------- */
/* Two-wide bars (red/blue) spanning both columns, small squares in middle row */
.content4 {
  display: grid;
  grid-template-columns: 200px 200px;
  grid-template-rows: 100px 200px 100px;
  gap: 20px;
  justify-content: center;
  align-content: center;
  width: 90%;
  margin: 0 auto;
}
.red4 {
  background-color: red;
  grid-column: 1 / 3;
  grid-row: 1 / 2;
  height: 100px;
}
.green4 {
  background-color: green;
  grid-column: 1 / 2;
  grid-row: 2 / 3;
  height: 200px;
  width: 200px;
}
.yellow4 {
  background-color: gold;
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  height: 200px;
  width: 200px;
}
.blue4 {
  background-color: blue;
  grid-column: 1 / 3;
  grid-row: 3 / 4;
  height: 100px;
}

/* ---------- Activity 5 ---------- */
/* Float the red box so text wraps around it (grid is not appropriate here) */
.content5 {
  width: 70%;
  margin: 0 auto;
  font-size: 16px;
  line-height: 1.5;
  overflow: auto; /* keep layout tidy after floats */
}
.red5 {
  width: 150px;
  height: 150px;
  background-color: red;
  float: left;
  margin: 0 20px 20px 0;
}
.green5, .blue5 {
  display: none; /* exercise only shows red floated box with text wrapping */
}
.yellow5 {
  background-color: transparent;
}

/* ---------- Activity 6 ---------- */
/* Visualize a 6x6 grid; layered boxes with z-index */
.content6 {
  display: grid;
  grid-template-columns: repeat(6, 100px);
  grid-template-rows: repeat(6, 100px);
  width: 600px;
  height: 600px;
  margin: 0 auto;
  position: relative;
}
.red6 {
  background-color: red;
  grid-column: 1 / 3;
  grid-row: 1 / 3;
  z-index: 1;
}
.green6 {
  background-color: green;
  grid-column: 2 / 4;
  grid-row: 2 / 4;
  z-index: 2;
}
.yellow6 {
  background-color: gold;
  grid-column: 3 / 5;
  grid-row: 3 / 5;
  z-index: 3;
}
.blue6 {
  background-color: blue;
  grid-column: 4 / 6;
  grid-row: 4 / 6;
  z-index: 4;
}

/* ---------- Shared styles (leave alone) ---------- */
.activity {
  width: 70%;
  margin: 20px auto;
  font-family: Arial, sans-serif;
  border: 1px solid black;
  padding: 10px;
  clear: both;
  overflow: auto;
}
.hint {
  border: 1px solid grey;
  background: #e0e0e0;
  padding: .5em;
  position: relative;
  margin: 1em 0;
}
.hint h3 { margin: 0; }
.hint:hover { background: #d0d0d0; }
.hint > div { display: none; }
.hint input[type=checkbox] {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  z-index: 1;
  cursor: pointer;
}
.hint input[type=checkbox]:checked ~ div { display: block; }
.hint i {
  position: absolute;
  transform: translate(-6px, 0);
  margin-top: 16px;
  right: 10px;
  top: -3px;
}
.hint i:before, .hint i:after {
  content: "";
  position: absolute;
  background-color: black;
  width: 3px;
  height: 9px;
}
.hint i:before { transform: translate(2px, 0) rotate(45deg); }
.hint i:after { transform: translate(-2px, 0) rotate(-45deg); }
.hint input[type=checkbox]:checked ~ i:before {
  transform: translate(-2px, 0) rotate(45deg);
}
.hint input[type=checkbox]:checked ~ i:after {
  transform: translate(2px, 0) rotate(-45deg);
}
.hint a { position: relative; z-index: 1; }
